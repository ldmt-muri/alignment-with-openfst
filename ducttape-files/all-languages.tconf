global {
    # Output directory:
    ducttape_output="/usr3/home/chuchenl/naacl-exps/1126-english4k-winsize1-scaled-rest/"

    # general
    cores=16

    embeddings=(EmbeddingType: senna="/usr3/home/chuchenl/embeddings/w2v-en-complete.model" w2v="/usr3/home/chuchenl/corpora/tokenized-raws/w2v_model" manaal="/usr3/home/chuchenl/embeddings/de-projected-en-48.txt" synEmb="/usr3/home/chuchenl/embeddings/syntacticEmbeddings/skipdep_embeddings.txt") 

    # data
    labeled_train_text="/usr0/home/wammar/empty"
    labeled_test_text=(Language: english1k="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/english-ptb-2007.tok.0k-1k"
                                 english4k="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/english-ptb-2007.tok.4k"
                                 arabic="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/arabic-padt-2007.tok.novowel"
                                 basque="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/basque-eus3lb-2007.tok"
                                 danish="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/danish-ddt-2006.tok"
                                 greek="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/greek-gdt-2007.tok"
                                 hungarian="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/hungarian-szeged-2007.tok"
                                 italian="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/italian-isst-2007.tok"
                                 turkish07="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/turkish-metusbanci-2007.tok"

                                 kinyarwanda="/usr1/home/wammar/pos-data/kinyarwanda/dev+test.tok"
                                 malagasy="/usr1/home/wammar/pos-data/malagasy/dev+test.tok"
                                 
                                 bulgarian="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/bulgarian-bultreebank-2006.tok"
                                 catalan="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/catalan-cesscat-2007.tok"
                                 chinese="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/chinese-sinica-2007.tok"
                                 czech06="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/czech-pdt-2006.tok"
                                 czech07="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/czech-pdt-2007.tok"
                                 dutch="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/dutch-alpino-2006.tok"
                                 german="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/german-tiger-2006.tok"
                                 japanese="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/japanese-verbmobil-2006.tok"
                                 portuguese="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/portuguese-bosque-2006.tok"
                                 slovene="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/slovene-sdt-2006.tok"
                                 spanish="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/spanish-cast3lb-2006.tok"
                                 swedish="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/swedish-talbanken05-2006.tok"
                                 turkish06="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/turkish-metusbanci-2006.tok"
                                 csdata="/usr3/home/chuchenl/mock/100.tok"
                      )

    unlabeled_train_text=(Language:        english1k="/usr0/home/wammar/empty"
                                 english4k="/usr0/home/wammar/empty"
                                 arabic="/usr0/home/wammar/empty"
                                 basque="/usr0/home/wammar/empty"
                                 danish="/usr0/home/wammar/empty"
                                 greek="/usr0/home/wammar/empty"
                                 hungarian="/usr0/home/wammar/empty"
                                 italian="/usr0/home/wammar/empty"
                                 turkish07="/usr0/home/wammar/empty"

                                 kinyarwanda="/usr1/home/wammar/pos-data/kinyarwanda/train.tok"
                                 malagasy="/usr1/home/wammar/pos-data/malagasy/train.tok"

                                 bulgarian="/usr0/home/wammar/empty"
                                 catalan="/usr0/home/wammar/empty"
                                 chinese="/usr0/home/wammar/empty"
                                 czech06="/usr0/home/wammar/empty"
                                 czech07="/usr0/home/wammar/empty"
                                 dutch="/usr0/home/wammar/empty"
                                 german="/usr0/home/wammar/empty"
                                 japanese="/usr0/home/wammar/empty"
                                 portuguese="/usr0/home/wammar/empty"
                                 slovene="/usr0/home/wammar/empty"
                                 spanish="/usr0/home/wammar/empty"
                                 swedish="/usr0/home/wammar/empty"
                                 turkish06="/usr0/home/wammar/empty"
                                 csdata="/usr0/home/wammar/empty"
                      )

    labeled_train_labels="/usr0/home/wammar/empty"
    labeled_test_labels=(Language: english1k="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/english-ptb-2007.pos.0k-1k"
                                 english4k="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/english-ptb-2007.pos.4k"
                                 arabic="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/arabic-padt-2007.pos"
                                 basque="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/basque-eus3lb-2007.pos"
                                 danish="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/danish-ddt-2006.pos"
                                 greek="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/greek-gdt-2007.pos"
                                 hungarian="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/hungarian-szeged-2007.pos"
                                 italian="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/italian-isst-2007.pos"
                                 turkish07="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/turkish-metusbanci-2007.pos"

                                 kinyarwanda="/usr1/home/wammar/pos-data/kinyarwanda/dev+test.pos"
                                 malagasy="/usr1/home/wammar/pos-data/malagasy/dev+test.pos"

                                 bulgarian="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/bulgarian-bultreebank-2006.pos"
                                 catalan="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/catalan-cesscat-2007.pos"
                                 chinese="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/chinese-sinica-2007.pos"
                                 czech06="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/czech-pdt-2006.pos"
                                 czech07="/usr1/home/wammar/pos-data/conll2007/autoencoder-format/czech-pdt-2007.pos"
                                 dutch="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/dutch-alpino-2006.pos"
                                 german="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/german-tiger-2006.pos"
                                 japanese="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/japanese-verbmobil-2006.pos"
                                 portuguese="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/portuguese-bosque-2006.pos"
                                 slovene="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/slovene-sdt-2006.pos"
                                 spanish="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/spanish-cast3lb-2006.pos"
                                 swedish="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/swedish-talbanken05-2006.pos"
                                 turkish06="/usr1/home/wammar/pos-data/conll2006/autoencoder-format/turkish-metusbanci-2006.pos"
                                 csdata="/usr3/home/chuchenl/mock/100.pos"
                      )

    # precomputed brown clusters' paths file
    precomputed_brown_clusters=(Language: english1k="/usr3/home/wammar/brown-clusters/english.newscommentaryv8_penntreebank-c100-p1.out/paths"
                                 english4k="/usr3/home/wammar/brown-clusters/english.newscommentaryv8_penntreebank-c100-p1.out/paths"
                                 arabic="/usr3/home/wammar/brown-clusters/arabic.newscommentaryv8_conll07-c100-p1.out/paths"
                                 basque="/usr3/home/wammar/brown-clusters/basque.newscrowl2012_conll06-c100-p1.out/paths"
                                 danish="/usr3/home/wammar/brown-clusters/danish.newscrawl2011_conll2006-c100-p1.out/paths"
                                 greek="/usr3/home/wammar/brown-clusters/greek.newscrawl2011_conll07-c100-p1.out/paths"
                                 hungarian="/usr3/home/wammar/brown-clusters/hungarian.newscrawl2011_conll07-c100-p1.out/paths"
                                 italian="/usr3/home/wammar/brown-clusters/italian.newscrawl2010_conll07-c100-p1.out/paths"
                                 turkish07="/usr3/home/wammar/brown-clusters/turkish.newscrawl2011_conll07-c100-p1.out/paths"
                
                                 kinyarwanda="/usr3/home/wammar/brown-clusters/kinyarwanda.train+dev+test-c100-p1.out/paths"
                                 malagasy="/usr3/home/wammar/brown-clusters/malagasy.train+dev+test-c100-p1.out/paths"

                                 bulgarian=""
                                 catalan=""
                                 chinese=""
                                 czech06=""
                                 czech07=""
                                 dutch=""
                                 german=""
                                 japanese=""
                                 portuguese=""
                                 slovene=""
                                 spanish=""
                                 swedish=""
                                 turkish06=""
                                 csdata=""
                      )

    # initial values for theta    
    init_theta=(Language:        english1k=""
                                 english4k=""
                                 arabic=""
                                 basque=""
                                 danish=""
                                 greek=""
                                 hungarian=""
                                 italian=""
                                 turkish07=""

                                 kinyarwanda=""
                                 malagasy=""

                                 bulgarian=""
                                 catalan=""
                                 chinese=""
                                 czech06=""
                                 czech07=""
                                 dutch=""
                                 german=""
                                 japanese=""
                                 portuguese=""
                                 slovene=""
                                 spanish=""
                                 swedish=""
                                 turkish06=""
                                 csdata=""
                      )
    
    # initial values for lambda    
    init_lambda=(Language:       english1k=""
                                 english4k=""
                                 arabic=""
                                 basque=""
                                 danish=""
                                 greek=""
                                 hungarian=""
                                 italian=""
                                 turkish07=""

                                 kinyarwanda=""
                                 malagasy=""

                                 bulgarian=""
                                 catalan=""
                                 chinese=""
                                 czech06=""
                                 czech07=""
                                 dutch=""
                                 german=""
                                 japanese=""
                                 portuguese=""
                                 slovene=""
                                 spanish=""
                                 swedish=""
                                 turkish06=""
                                 csdata=""
                      )
    
    # use labeled data exclusively for training?
    supervised=""
    tag_dict_file=""

    # reconstruct brown clusters or not?
    reconstruct_brown_clusters=true

}

plan Full {
    reach Evaluate via (Model: autoencoder) * (L2Strength: point_o_o_one point_o_o_three point_o_one point_o_three point_one point_three one three ten thirty) * (DirichletAlpha: point_one) * (FeatureSet: full) * (CoordIterCount: fifty) * (Prefix: other) * (Language: english4k) * (EffectiveUnlabeledLines: 0k) * (EmbeddingType: w2v) * (Neural: yes) * (Scaled: no)
# batch1: arabic basque    danish  greek   hungarian italian turkish07
# batch2: bulgarian catalan chinese czech06   czech07 dutch     german japanese portuguese slovene spanish swedish turkish06
# batch3: kinyarwanda malagasy 
}
plan Ten_Twenty {
    reach Evaluate via (Model: autoencoder) * (L2Strength: point_o_one point_o_three) * (DirichletAlpha: point_one) * (FeatureSet: full) * (CoordIterCount: fifty) * (Prefix: other) * (Language: english4k) * (EffectiveUnlabeledLines: 0k) * (EmbeddingType: w2v) * (Neural: yes) * (Scaled: ten twenty)
}

plan Normalize {
    reach Evaluate via (Model: autoencoder) * (L2Strength: point_o_one point_o_three) * (DirichletAlpha: point_one) * (FeatureSet: full) * (CoordIterCount: fifty) * (Prefix: other) * (Language: english4k) * (EffectiveUnlabeledLines: 0k) * (EmbeddingType: w2v) * (Neural: yes) * (Scaled: normalize)
}

plan Missing {
    reach Evaluate via (Model: autoencoder) * (L2Strength: point_o_o_one point_o_o_three point_o_one point_one) * (DirichletAlpha: point_one) * (FeatureSet: full) * (CoordIterCount: fifty) * (Prefix: other) * (Language: english4k) * (EffectiveUnlabeledLines: 0k) * (EmbeddingType: w2v) * (Neural: yes) * (Scaled: five)
}

